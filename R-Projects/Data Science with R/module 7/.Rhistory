setwd("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 6")
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 6/Data Visualizations.R")
cars <- read.csv("Cars.csv")
cars <- read.csv("Cars.csv")
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 6/Data Visualizations.R")
ggplot(
data = cars,
aes(x = Transmission) +
geom_bar() +
ggtitle("Count of Cars by Transmission Type") +
xlab("Tranmisiion Type") +
ylab("Count of Cars")
)
library(ggplot2)
ggplot(
data = cars,
aes(x = Transmission) +
geom_bar() +
ggtitle("Count of Cars by Transmission Type") +
xlab("Tranmisiion Type") +
ylab("Count of Cars")
)
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 6/Data Visualizations.R")
install.packages("ggplot2")
library(ggplot2)
ggplot(
data = cars,
aes(x = Transmission)) +
geom_bar() +
ggtitle("Count of Cars by Transmission Type") +
xlab("Tranmisiion Type") +
ylab("Count of Cars")
ggplot(
data = cars,
aes(x = Fuel.Economy)) +
geom_histogram(
bins = 10) +
ggtitle("Distribution of Fuel Economy") +
xlab("Fuel Economy (mpg)") +
ylab("Count of Cars")
ggplot(
data = cars,
aes(x = Fuel.Economy)) +
geom_density() +
ggtitle("Distribution of Fuel Economy") +
xlab("Fuel Economy (mpg)") +
ylab("Density")
ggplot(
data = cars,
aes(
x = Cylinders,
y = Fuel.Economy)) +
geom_point() +
ggtitle("") +
xlab("") +
ylab("")
ggplot(
data = cars,
aes(
x = Cylinders,
y = Fuel.Economy)) +
geom_point() +
ggtitle("Fuel Economy by Cylinders") +
xlab("Number of Cylinders") +
ylab("Fuel Economy (mpg)")
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 6/Data Visualizations.R")
install.packages("ggplot2")
install.packages("ggplot2")
setwd("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 7")
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 7/Statistical Models.R")
cars <- read.csv("Cars.csv")
data(iris)
head(iris)
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
main = "Iris Petal Length vs. Width",
xlab = "Petal Length (cm)",
ylab = "Petal Width (cm)"
)
model <- lm(
formula = Petal.Width - Petal.Length,
data = iris
)
model <- lm(
formula = Petal.Width ~ Petal.Length,
data = iris
)
summary(model)
lines(
x = iris$Petal.Length,
y = model$fitted,
col = "red",
lwd = 3
)
cor(
x = iris$Petal.Length,
y = iris$Petal.Width
)
predict(
object = model,
newdata = data.frame(
Petal.Length = c(2, 5, 7))
)
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 7/Statistical Models.R")
source("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 7/Statistical Models.R")
