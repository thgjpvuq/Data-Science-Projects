add3 = seq(from=3, to=27, by=3)
add3
even = seq(from=2, by=2, length.out = 10)
even
sprintf("4 in evens %s", 4 %in% even)
rep(x=2, times=5, each=2)
rep(x=c(1,2,3), times=2, each=2)
sprintf("4 == 5 : %s", 4 == 5)
oneTo20 = c(1:20)
isEven = oneTo20 %% 2== 0
isEven
oneTo20 = c(1:20)
isEven = oneTo20 %% 2 == 0
isEven
justEven = oneTo20[oneTo20 %% 2 == 0]
justEven
cat("TRUE && FALSE = ", T && F, "\n")
grade = "C"
switch(grade,
"A" = print("great"),
"B" = print("good"),
"C" = print("okay"),
print("none"))
str1 = "string"
nchar(str1)
sprintf("Dog > Egg : %s", "Dog" > "Egg")
str2 = paste("Owl", "Bear", sep="")
str2
substr(x=str2, start=4, stop=7)
sub(pattern = "Owl", replacement = "Hawk", x=str2)
fsub(pattern="Egg", replacement="Chicken")
strVect = strsplit("A dog", " ")
strVect
direction = c("up", "left", "right", "down")
factorDir = factor(direction)
is.factor(factorDir)
factorDir
levels(x=factorDir)
dow = c("monday", "tuesday", "wednesday", "thursday")
wdays = c("tuesday", "thursday")
wdFact = factor(x=wdays, levels=dow, ordered=T)
wdFact
custData = data.frame(name=c("tom", "sally", "sue"),
age=c(43,32,21),
stringsAsFactors = F)
custData
custData[1:3]
custData[1:2]
custData[1:3,2]
dim(custData)
recordMark = data.frame(name="mark", age=33)
custData = rbind(custData, recordMark)
custData
debt = c(0, 25, 36, 48)
custData = cbind(custData, debt)
custData
owesMoney = custData[custData$debt > 0,]
owesMoney
num = 1
repeat{
print(num)
num=num + 1
if(num > 5){
break
}
}
num = 5
while(num > 0){
num = num -1
if(num %% 2 == 0){
next
}
print(num)
}
oneTo5 = 1:5
for(i in oneTo5){
print(i)
}
matrix1 = matrix(data=c(1,2,3,4))
matrix1
matrix2 = matrix(data=c(1,2,3,4), nrow=2, ncol=2)
matrix2
matrix3 = matrix(data=c(1,2,3,4), nrow=2, ncol=2, byrow=T)
matrix3
dim(matrix3)
matrix3[1,2]
matrix3[1,]
matrix4 = rbind(1:3, 4:6, 7:9)
matrix4
matrix4[1,1] = 0
matrix4
help.start()
install.packages("dplyr")
?data.frame
library("dplyr")
setwd("~/GitHub/Data-Science-Projects/R-Projects/Data Science with R/module 4")
cars <- read.table(
file = "Cars.txt",
header = TRUE,
sep = "\t",
quote = "\""
)
head(cars)
library("dplyr")
# package loading
library(dplyr)
library(dplyr)
temp <- select(
.data = cars,
Transmission,
Cylinders,
Fuel.Economy
)
temp
head(temp)
temp <- filter(
.data = temp,
Transmission == "Automatic"
)
head(temp)
temp <- mutate(
.data = temp,
Consumption = Fuel.Economy * 0.425
)
head(temp)
temp <- summarize(
.data = temp,
Avg.Consumption = mean(Consumption)
)
head(temp)
temp
temp <- group_by(
.data = temp,
Cylinders
)
temp
temp
temp <- group_by(
.data = temp,
Cylinders
)
# read tab-delimited file
cars <- read.table(
file = "Cars.txt",
header = TRUE,
sep = "\t",
quote = "\""
)
head(cars)
# select subset of columns
temp <- select(
.data = cars,
Transmission,
Cylinders,
Fuel.Economy
)
head(temp)
# filter subset of rows
temp <- filter(
.data = temp,
Transmission == "Automatic"
)
head(temp)
# compute new column
temp <- mutate(
.data = temp,
Consumption = Fuel.Economy * 0.425
)
head(temp)
temp <- group_by(
.data = temp,
Cylinders
)
temp
head(temp)
temp <- summarize(
.data = temp,
Avg.Consumption = mean(Consumption)
)
temp
temp <- arrange(
.data = temp,
desc(Avg.Consumption)
)
head(temp)
efficiency <- as.data.frame(temp)
print(efficiency)
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic")  %>%
mutate(Consumption = Fuel.Economy * 0.425)  %>%
group_by(Cylinders)  %>%
summarize(Avg.Consumption = mean(Consumption))  %>%
arrange(desc(Avg.Consumption))  %>%
as.data.frame()
head(efficiency)
head(efficiency)
print(efficiency)
write.csv(
x = efficiency,
file = "Fuel Efficiency.csv",
row.names = FALSE
)
