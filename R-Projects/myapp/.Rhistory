mainPanel(
"main panel",
plotOutput("iris_plot1")
)
)
# Define UI
ui <- fluidPage(
titlePanel(
h1("Iris Shiny App")),
sidebarLayout(
sidebarPanel(
"sidebar panel",
sliderInput("slider1", h3("slider1"),
min = 0, max = 100, value = 50),
)
),
mainPanel(
"main panel")
)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel("sidebar panel"),
mainPanel("main panel")
)
)
# Define server logic
server <- function(input, output) {
}
# Run the app
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 100, value = 50
),
),
mainPanel("main panel")
)
)
# Define server logic
server <- function(input, output) {
}
# Run the app
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
),
),
mainPanel("main panel")
)
)
# Define server logic
server <- function(input, output) {
}
# Run the app
shinyApp(ui = ui, server = server)
?plotOutput(
?plotOutput
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
),
),
mainPanel(
"main panel",
plotOutput(
)
)
)
)
# Define server logic
server <- function(input, output) {
}
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
)
)
)
)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
"Iris Plots"
)
)
)
)
# Define server logic
server <- function(input, output) {
}
# Run the app
shinyApp(ui = ui, server = server)
output$var <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Sepal.Width,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Petal.Length,
main = "Sepal.Length",
xlab = "cm")
})
# Define UI
ui <- fluidPage(
titlePanel("title panel")
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
"Iris Plots"
)
)
)
)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
"Iris Plots"
)
)
)
)
# Define server logic
server <- function(input, output) {
output$var <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Sepal.Width,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Petal.Length,
main = "Sepal.Length",
xlab = "cm")
})
}
# Run the app
shinyApp(ui = ui, server = server)
output$plot <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Sepal.Width,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Petal.Length,
main = "Sepal.Length",
xlab = "cm")
})
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
"map"
)
)
)
)
# Define server logic
server <- function(input, output) {
output$map <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Sepal.Width,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Petal.Length,
main = "Sepal.Length",
xlab = "cm")
})
}
# Run the app
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
"SL" # Sepal.Length
)
)
)
)
# Define server logic
server <- function(input, output) {
output$SL <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Sepal.Width,
main = "Sepal.Length",
xlab = "cm")
hist(
x = iris$Petal.Length,
main = "Sepal.Length",
xlab = "cm")
})
}
# Run the app
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
),
sliderInput(
"slider1", h3("Sliders"),
min = 0, max = 50, value = 25
)
),
mainPanel(
"main panel",
plotOutput(
"SL" # Sepal.Length
),
plotOutput(
"SW" # Sepal.Width
),
plotOutput(
"PL" # Petal.Length
)
)
)
)
# Define server logic
server <- function(input, output) {
output$SL <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
})
output$SW <- renderPlot({
hist(
x = iris$Sepal.Width,
main = "Sepal.Length",
xlab = "cm")
})
output$PL <- renderPlot({
hist(
x = iris$Petal.Length,
main = "Sepal.Length",
xlab = "cm")
})
}
# Run the app
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"var",
label = "Select variable",
choices = c("Sepal Length",
"Sepal Width",
"Petal Length"),
selected = "Sepal Length"
)
),
mainPanel(
"main panel",
plotOutput(
"SL" # Sepal.Length
),
plotOutput(
"SW" # Sepal.Width
),
plotOutput(
"PL" # Petal.Length
)
)
)
)
# Define server logic
server <- function(input, output) {
output$SL <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
})
output$SW <- renderPlot({
hist(
x = iris$Sepal.Width,
main = "Sepal.Width",
xlab = "cm")
})
output$PL <- renderPlot({
hist(
x = iris$Petal.Length,
main = "Petal.Length",
xlab = "cm")
})
}
# Run the app
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel(
"sidebar panel",
selectInput(
"col",
label = "Select color",
choices = c("blue",
"orange",
"yellow"),
selected = "blue"
)
),
mainPanel(
"main panel",
plotOutput(
"SL" # Sepal.Length
),
plotOutput(
"SW" # Sepal.Width
),
plotOutput(
"PL" # Petal.Length
)
)
)
)
# Define server logic
server <- function(input, output) {
output$SL <- renderPlot({
hist(
x = iris$Sepal.Length,
main = "Sepal.Length",
xlab = "cm")
})
output$SW <- renderPlot({
hist(
x = iris$Sepal.Width,
main = "Sepal.Width",
xlab = "cm")
})
output$PL <- renderPlot({
hist(
x = iris$Petal.Length,
main = "Petal.Length",
xlab = "cm")
})
}
# Run the app
shinyApp(ui = ui, server = server)
