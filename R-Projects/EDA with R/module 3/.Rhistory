# set working directory
setwd("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3")
# load data
movies <- read.csv("Movies.csv")
genres <- read.csv("Genres.csv")
head(movies)
head(genres)
# univariate statistics for qualitative variables
table(movies$Rating)
table(genres$Genre)
# univariate statistics for quantitative variables
# analyze the location of a quantitative variable
mean(movies$Runtime)
median(movies$Runtime)
which.max(table(movies$Runtime))
# analyze the spread of a quantitative variable
min(movies$Runtime)
max(movies$Runtime)
range(movies$Runtime)
diff(range(movies$Runtime))
quantile(movies$Runtime)
quantile(movies$Runtime, 0.25)
quantile(movies$Runtime, 0.90)
IQR(movies$Runtime)
var(movies$Runtime)
sd(movies$Runtime)
# analyze the shape of a quantitative variable
# load the moments package for skewness and kurtosis
# install.packages("moments")
library(moments)
skewness(movies$Runtime)
kurtosis(movies$Runtime)
plot(density(movies$Runtime))
# summarize quantitative variable
summary(movies$Runtime)
# bivariate statistics for two qualitative variables
table(genres$Genre, genres$Rating)
#covariance
cov(movies$Runtime, movies$Box.Office)
cov(movies$Critic.Score, movies$Box.Office)
# correlation coefficients
cor(movies$Runtime, movies$Box.Office)
cor(movies$Critic.Score, movies$Box.Office)
source("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3/Descriptive Statistics-Univariate and Bivariate Analysis.R")
# bivariate statistics for both a qualitative and quantitative variable
tapply(movies$Box.Office, movies$Rating, mean)
tapply(genres$Box.Office, genres$Genre, mean)
# summarize entire table
summary(movies)
source("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3/Descriptive Statistics-Univariate and Bivariate Analysis.R")
setwd("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3")
# load csv data
movies <- read.csv(
file = "Movies.csv",
quote = "\"")
genres <- read.csv(
file = "Genres.csv",
quote = "\"")
head(movies)
head(genres)
# create bar graph of rating observations
plot(moves$Rating)
# create bar graph of rating observations
plot(movies$Rating)
# create bar graph of rating observations
plot(movies$Rating)
source("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3/Descriptive Statistics-Univariate and Bivariate Analysis.R")
setwd("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3")
# load csv data
movies <- read.csv(
file = "Movies.csv",
quote = "\"")
genres <- read.csv(
file = "Genres.csv",
quote = "\"")
head(movies)
head(genres)
# create bar graph of rating observations
plot(movies$Rating)
# create bar graph of rating observations
plot(movies$Rating,
ylim = 3000)
# create bar graph of rating observations
plot(movies$Rating,
ylim = 1400)
# create bar graph of rating observations
plot(movies$Rating,
ylim = 1400)
# create bar graph of rating observations
plot(movies$Rating,
ylim = 1400)
# create bar graph of rating observations
plot(x = movies$Rating,
y = num
ylim = 1400)
# create bar graph of rating observations
plot(x = movies$Rating,
ylim = 1400)
help(plot)
# create bar graph of rating observations
barplot(movies$Rating)
# create bar graph of rating observations
barplot(movies$Rating, xlab = "Rating",
ylab = "number", main = "ratings")
# Set working directory
setwd("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3")
# Load CSV data
movies <- read.csv("Movies.csv", quote = "\"")
genres <- read.csv("Genres.csv", quote = "\"")
# Peek at the data
head(movies)
head(genres)
# Convert Rating to a factor
movies$Rating <- as.factor(movies$Rating)
# Create a bar graph of rating observations
plot(movies$Rating)
# convert rating to factor
movies$Rating <- as.factor(movies$Rating)
# create bar graph of rating observations
plot(movies$Rating)
# create bar graph of rating observations
plot(movies$Rating, col = "blue"
# create bar graph of rating observations
plot(movies$Rating, col = "blue")
# create bar graph of rating observations
plot(movies$Rating, col="blue")
# create bar graph of rating observations
plot(movies$Rating, col="orange")
# create a pie chart of rating observations
pie(table(movies$Rating))
# create a dot plot of runtime
plot(
x = movies$Runtime,
y = rep(0, nrow(movies)),
ylab = "",
yaxt = "n")
# create boxplot of runtime
boxplot(
x = movies$Runtime,
xlab = "Runtime (minutes)",
horizontal = TRUE)
# create a histogram of runtime
hist(movies$Runtime)
# create a more course-grain histogram
hist(
x = movies$Runtime,
breaks = 30)
# create a density plot of runtime
plot(density(movies$Runtime))
# add dot plot to base of density plot
points(
x = movies$Runtime,
y = rep(-0.0005, nrow(movies))
)
source("~/GitHub/Data-Science-Projects/R-Projects/EDA with R/module 3/Data Visualizations.R")
